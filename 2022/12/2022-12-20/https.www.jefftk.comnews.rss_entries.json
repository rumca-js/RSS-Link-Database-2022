[{"source": "https://www.jefftk.com/news.rss", "title": "Logging Shell History in Zsh", "description": "<p><span>\n\nBy default most shells don't log your history in a detailed durable\nway, which gives up one of the big advantages of working on the\ncommand line.  Good history lets you look back at things you did\nmonths or years ago, in a searchable and skimmable fashion, so you can\nanswer questions like \"how did I generate this number?\", \"what was\nthat trick I used?\", or \"if I'm doing something similar now what\nshould I recall from last time?\"\n\n</span>\n\n<p>\n\nI use <code>bash</code> as my shell and have <a href=\"https://www.jefftk.com/shell-history-and-the-value-of-text-only-environments\">long</a>\n<a href=\"https://www.jefftk.com/p/you-should-be-logging-shell-history\">used</a>:\n\n</p>\n\n<p>\n\n</p>\n\n<pre>\n.bashrc:\n  promptFunc() {\n    echo \"$(date +%Y-%m-%d--%H-%M-%S) $(hostname) $PWD $(history 1)\" \\\n      &gt;&gt; ~/.full_history\n  }\n  PROMPT_COMMAND=promptFunc\n</pre>\n\n\n\n<p>\n\nI was recommending this to folks at work, but they use\n<code>zsh</code>.  In <code>zsh</code> you can get a lot of the way\nhere by setting <code>INC_APPEND_HISTORY</code> (append to history\nimmediately instead of waiting for the shell to exit),\n<code>SAVEHIST=1000000000</code> (effectively don't limit the history\nsize on disk), and <code>EXTENDED_HISTORY</code> (to store timestamps\nwith history entries).  But you risk losing most of your history if you\never accidentally invoke <code>zsh</code> without these set, and it\ndoesn't write the directory you ran the command in (which is metadata\nI reference a lot).\n\n</p>\n\n<p>\n\n<a href=\"https://mikemc.cc/\">Mike</a> tweaked my snippet to run in\n<code>zsh</code>:\n\n</p>\n\n<p>\n\n</p>\n\n<pre>\n.zshrc:\n  precmd() {\n    echo \"$(date +%Y-%m-%d--%H-%M-%S) $(hostname) $PWD $(history -1)\" \\\n      &gt;&gt; ~/.full_history\n  }\n</pre>\n\n\n\n<p>\n\nThe two changes are that <code>zsh</code> uses <code>precmd</code>\ninstead of <code>PROMPT_COMMAND</code>, and that you need\n<code>history -1</code> instead of <code>history 1</code>.\n\n</p>\n\n<p>\n\nYou can still use the same <code>histgrep</code> command on both:\n\n</p>\n\n<p>\n\n</p>\n\n<pre>\nfunction histgrep {\n  local n_lines=10\n  if [[ \"$1\" =~ ^[0-9]*$ ]]; then\n    n_lines=\"$1\"\n    shift\n  fi\n  grep \"$@\" ~/.full_history | tail -n \"$n_lines\"\n}\n</pre>\n\n\n\n<p>\n\nNote that this doesn't replace your shell's built-in history tooling,\nand I wouldn't recommend turning that off.  This just a very cheap\nadditional layer of logging with additional metadata and less risk of\naccidental deletion.\n\n  </p>\n\n<p><i>Comment via: <a href=\"https://www.facebook.com/jefftk/posts/pfbid0FGzTeUeQ9dzTifJn25J8pZyHuA6iJrrokK2FuRTkH6DCkpYPnj6doxwjPWKiL4UHl\">facebook</a>, <a href=\"https://lesswrong.com/posts/6WGyKKQnfaGa3YtMn\">lesswrong</a>, <a href=\"https://mastodon.mit.edu/@jefftk/109549552545020538\">mastodon</a></i></p>", "link": "https://www.jefftk.com/p/logging-shell-history-in-zsh", "date_published": "2022-12-20 08:00:00+00:00", "persistent": false, "user": null, "language": "en-US"}]